# Generated by Django 4.2.9 on 2024-06-10 04:27

from django.db import migrations


def create_lead_parsing_data(apps, schema_editor):
    LeadParsingGroup = apps.get_model('company_management', 'LeadParsingGroup')
    LeadParsingItem = apps.get_model('company_management', 'LeadParsingItem')

    # Data to be created
    data = [
        {
            'group_name': 'Shipper information',
            'items': [
                '{customer.fullname}', '{customer.name}', '{customer.last_name}',
                '{customer.phone}', '{customer.extra.phone}', '{customer.email}'
            ]
        },
        {
            'group_name': 'Location information',
            'items': [
                '{origin.city}', '{origin.state.name}', '{origin.state.code}', '{origin.zip}',
                '{destination.city}', '{destination.state.name}', '{destination.state.code}', '{destination.zip}'
            ]
        },
        {
            'group_name': 'Vehicle information',
            'items': [
                '{vehicle.year}', '{vehicle.make}', '{vehicle.model}', '{vehicle.condition}',
                '{vehicle.vehicle_type}', '{vehicle.trailer_type}'
            ]
        },
        {
            'group_name': 'Vehicle #2 information',
            'items': [
                '{vehicle2.year}', '{vehicle2.make}', '{vehicle2.model}', '{vehicle2.condition}',
                '{vehicle2.vehicle_type}', '{vehicle2.trailer_type}'
            ]
        },
        {
            'group_name': 'Vehicle #3 information',
            'items': [
                '{vehicle3.year}', '{vehicle3.make}', '{vehicle3.model}', '{vehicle3.condition}',
                '{vehicle3.vehicle_type}', '{vehicle3.trailer_type}'
            ]
        },
        {
            'group_name': 'Shipment information',
            'items': [
                '{date_est_ship}', '{notes}',
            ]
        },
    ]

    # Create the groups and items
    for entry in data:
        group_name = entry['group_name']
        items = entry['items']

        group, created = LeadParsingGroup.objects.get_or_create(name=group_name)

        for item_name in items:
            LeadParsingItem.objects.get_or_create(name=item_name, group=group)


class Migration(migrations.Migration):
    dependencies = [
        ("company_management", "0009_leadparsinggroup_leadparsingitem_leadparsingvalue"),
    ]

    operations = [
        migrations.RunPython(create_lead_parsing_data),
    ]
